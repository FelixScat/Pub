<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Package on Cb7d</title>
    <link>http://example.org/tags/package/</link>
    <description>Recent content in Package on Cb7d</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2020</copyright>
    <lastBuildDate>Wed, 19 Feb 2020 10:46:42 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/tags/package/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cocoapods</title>
      <link>http://example.org/posts/cocoapods/</link>
      <pubDate>Wed, 19 Feb 2020 10:46:42 +0800</pubDate>
      
      <guid>http://example.org/posts/cocoapods/</guid>
      <description>CocoaPods CocoaPods是OS X和iOS下的一个第三类库管理工具，通过CocoaPods工具我们可以为项目添加被称为“Pods”的依赖库（这些类库必须是CocoaPods本身所支持的），并且可以轻松管理其版本。
使用CocoaPods有以下几点好处：
 在引入第三方库时它可以自动为我们完成各种各样的配置，包括配置编译阶段、连接器选项、甚至是ARC环境下的一些配置等。 使用CocoaPods可以很方便地管理的第三方SDK，大部分稳定好用的SDK都支持cocoapods导入。 在项目模块化的过程中方便我们模块间解耦。  安装 sudo gem install cocoapods 查看版本 pod --version 在开发中安装使用cocoapods要注意版本,因为一般开发过程中要大家一起使用同一个工程,一般为了指定版本我们会在工程下创建Gemfile来指定使用cocoapods的版本。
指定使用Cocoapods的版本 除了指定Gemfile以外 ， 我们还可以安装指定版本的pods
sudo gem install cocoapods -v 1.3.1 再查看一下pod版本我们就会发现已经安装了1.3.1
卸载掉不需要的版本 当我们本地同时存在多个版本的pod的时候可以把多余的卸载掉
sudo gem uninstall cocoapods 会提示我们选择卸载的版本
Select gem to uninstall: 1. cocoapods-1.2.1 2. cocoapods-1.3.1 3. All versions &amp;gt; 我们选择想要卸载的版本的序号就好了 。
使用rvm管理ruby环境 有时我们需要不同的ruby环境，而且不想更改系统自带的时候可以考虑使用rvm管理本地的ruby版本
\curl -sSL https://get.rvm.io | bash -s stable 查看可用的ruby版本
rvm list known 使用某个制定版本作为默认的ruby版本
rvm use 2.6.3 --default 安装和使用bundle gem install bundler 然后在工程目录下创建Gemfile</description>
    </item>
    
  </channel>
</rss>